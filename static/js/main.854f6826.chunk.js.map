{"version":3,"sources":["m1-ui/pages/packs/Packs.module.css","m1-ui/navbar/Navbar.module.css","common/c4-Pagination/Pagination.module.css","assets/style/Common.module.css","common/c1-CommonInput/CommonInput.module.css","common/c3-CommonCheckbox/CommonCheckbox.module.css","common/c2-CommonButton/CommonButton.module.css","m1-ui/pages/profile/Profile.module.css","m1-ui/preloader/Preloader.module.css","m1-ui/pages/login/Login.module.css","m1-ui/pages/test/Test.module.css","m1-ui/pages/cards/cards.module.css","m3-dal/api.ts","m2-bll/redusers/auth-reducer.ts","common/c2-CommonButton/CommonButton.tsx","assets/images/avatar.png","assets/images/preloader.svg","m1-ui/preloader/Preloader.tsx","m1-ui/pages/profile/Profile.tsx","common/c1-CommonInput/CommonInput.tsx","common/c3-CommonCheckbox/CommonCheckbox.tsx","m1-ui/pages/login/Login.tsx","m2-bll/redusers/restore-reducer.ts","m1-ui/pages/new-password/NewPassword.tsx","m2-bll/redusers/registration-reducer.ts","m1-ui/pages/registration/Registration.tsx","m1-ui/pages/restore-password/RestorePassword.tsx","m1-ui/pages/test/Test.tsx","m1-ui/pages/error404/Error404.tsx","m2-bll/redusers/pack-reducer.ts","m1-ui/pages/packs/pack/Pack.tsx","common/c4-Pagination/Pagination.tsx","m1-ui/pages/cards/useComponentVisible.tsx","m1-ui/pages/cards/ModalContainer.tsx","m1-ui/pages/packs/Packs.tsx","m2-bll/redusers/cards-reducer.ts","m1-ui/pages/cards/Card.tsx","m1-ui/pages/cards/Cards.tsx","m1-ui/pages/learn/Learn.tsx","m1-ui/routes/Routes.tsx","m1-ui/navbar/Navbar.tsx","App.tsx","reportWebVitals.ts","m2-bll/state/store.ts","m2-bll/redusers/profile-reducer.ts","index.tsx"],"names":["module","exports","instanceHeroku","axios","create","withCredentials","baseURL","cardsPackAPI","page","pageCount","get","cardsPack","post","put","id","delete","authApi","data","name","avatar","userId","restoreAPI","restorePassword","email","a","from","message","promise","setNewPassword","password","resetPasswordToken","registrationAPI","cardsAPI","getCards","cardsPackId","addCard","question","answer","card","cardsPack_id","delCard","cardId","updateCard","_id","addPack","intialState","isLoggedIn","error","isFetching","isInitialized","authUserData","setErrorAC","type","isLogedInAC","value","setIsFetchingAC","setUserData","authMeTC","dispatch","getState","res","updateMeDataTC","updatedUser","response","console","log","CommonButton","red","className","restProps","s","btn","Preloader","style","preloaderContainer","src","preloader","alt","Profile","useDispatch","useSelector","state","auth","useState","editMode","setEditMode","userName","setUserName","userAvatar","useEffect","profileBlock","onChange","e","currentTarget","autoFocus","onBlur","onDoubleClick","onClick","to","PATH","LOGIN","CommonInput","formikFieldsProps","label","group","required","highlight","bar","CommonCheckbox","onChangeChecked","spanClassName","children","cbContainer","optionInput","Login","formik","useFormik","initialValues","rememberMe","validate","values","errors","test","length","onSubmit","commonContainer","title","formBlock","handleSubmit","getFieldProps","touched","registrationError","checkbox","SUCCESS_SUBMIT","FAILED_SUBMIT","INIT","SET_IS_PASSWORD_CHANGED","successSubmit","status","failedSubmit","initRestorePage","initialState","currentEmail","isPasswordChanged","NewPassword","useParams","restore","passwordConfirm","token","setTimeout","isRegistered","Registration","registration","then","catch","finally","RestorePassword","submitRestorePassword","useCallback","Test","Error404","pageSize","currentPage","cardPacksTotalCount","portionSize","userPackId","setCurrentPage","getPacks","setPack","cardPacks","totalCardPacksCount","Pack","props","table","tableContainer","tableItem","cardsCount","updated","url","disabled","userAuthId","user_id","onUpdate","cb","CARDS","LEARN","Pagination","pagesCount","Math","ceil","totalItemsCount","pages","i","push","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","pagination","navigationButton","filter","p","map","currentButton","paginationButton","onCurrentPage","useComponentVisible","initialIsVisible","isComponentVisible","setIsComponentVisible","ref","useRef","handleHideDropdown","event","key","handleClickOutside","current","contains","target","document","addEventListener","removeEventListener","ModalContainer","show","closeCB","onShow","packId","Packs","packs","setIsShowModalDel","setIsComponentVisibleDel","getPackIdFromPackComponent","mappedPacks","user_name","isShowModal","setIsShowModal","isShowModalDel","ref2","isComponentVisible2","packName","updatePackName","cardPack","formik2","pageNumber","modal","GET_CARDS","SET_IS_FETCHING","cards","options","cardsTotalCount","getCardsByPackId","GetCards","totalCardsCount","packUserId","Card","grade","questionImg","data-id","dataset","Cards","cardsPackUserId","fieldsWithCards","cardsContainer","paginationContainer","grades","getCard","sum","reduce","acc","rand","random","newSum","Learn","isChecked","setIsChecked","first","setFirst","setCard","g","NEW_PASSWORD","PROFILE","REGISTRATION","RESTORE_PASSWORD","TEST","PACKS","Routes","commonBlock","exact","path","render","Navbar","navbarBlock","activeClassName","active","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","profile","action","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.854f6826.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"Packs_table__KZQpX\",\"tableContainer\":\"Packs_tableContainer__3JuF2\",\"tableItem\":\"Packs_tableItem__2rZOA\",\"modal\":\"Packs_modal__1cmsZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbarBlock\":\"Navbar_navbarBlock__2wyuz\",\"active\":\"Navbar_active__3WZo-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"Pagination_pagination___fUNg\",\"currentButton\":\"Pagination_currentButton__1EqL1\",\"paginationButton\":\"Pagination_paginationButton__1piUX\",\"navigationButton\":\"Pagination_navigationButton__1oHVG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"commonBlock\":\"Common_commonBlock__1onnh\",\"commonContainer\":\"Common_commonContainer__VPZFU\",\"title\":\"Common_title__3AOve\",\"formBlock\":\"Common_formBlock__1qqQX\",\"error\":\"Common_error__32O98\",\"registrationError\":\"Common_registrationError__o7Dr2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"group\":\"CommonInput_group__2fckV\",\"bar\":\"CommonInput_bar__GpAhy\",\"highlight\":\"CommonInput_highlight__3y1Xi\",\"inputHighlighter\":\"CommonInput_inputHighlighter__2PJXc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cbContainer\":\"CommonCheckbox_cbContainer__1Rlmv\",\"optionInput\":\"CommonCheckbox_optionInput__K3vkX\",\"click-wave\":\"CommonCheckbox_click-wave__2k1RO\",\"radio\":\"CommonCheckbox_radio__13Kc_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"CommonButton_btn__1PMfW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileBlock\":\"Profile_profileBlock__9MaX2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloaderContainer\":\"Preloader_preloaderContainer__otx3L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"Login_checkbox__3ocOq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"test\":\"Test_test__1h1Vp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardsContainer\":\"cards_cardsContainer__3fBtF\",\"table\":\"cards_table__1oLsk\",\"table__cell\":\"cards_table__cell__vPzp2\",\"modal\":\"cards_modal__3Zn31\",\"btn\":\"cards_btn__2qGp3\",\"paginationContainer\":\"cards_paginationContainer__2FZ5n\"};","import axios from 'axios';\r\nimport { CardPacksType } from '../m2-bll/redusers/pack-reducer';\r\n\r\n// const instance = axios.create({\r\n//     baseURL: \"http://localhost:7542/2.0/\",\r\n//     withCredentials: true\r\n// })\r\n\r\nconst instanceHeroku = axios.create({\r\n  withCredentials: true,\r\n  baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n});\r\n\r\n//Cards Api\r\nexport const cardsPackAPI = {\r\n  getPacks(page: number | undefined, pageCount: number | undefined) {\r\n    return instanceHeroku.get<GetPacksResponseType>(\r\n      `cards/pack?page=${page}&pageCount=${pageCount}`\r\n    );\r\n  },\r\n  createPack(cardsPack: CardPacksType) {\r\n    return instanceHeroku.post('cards/pack', { cardsPack: { ...cardsPack } });\r\n  },\r\n  updatePack(cardsPack: CardPacksType) {\r\n    return instanceHeroku.put('cards/pack', { cardsPack: { ...cardsPack } });\r\n  },\r\n  deletePack(id: string) {\r\n    return instanceHeroku.delete(`cards/pack?id=${id}`);\r\n  },\r\n};\r\n\r\n//Packs Type\r\nexport type GetPacksResponseType = {\r\n  cardPacks: CardPacksType[];\r\n  page: number;\r\n  pageCount: number;\r\n  cardPacksTotalCount: number;\r\n  minCardsCount: number;\r\n  maxCardsCount: number;\r\n  token: string;\r\n  tokenDeathTime: string;\r\n};\r\n\r\n//Auth api\r\nexport const authApi = {\r\n  login(data: LoginDataType) {\r\n    return instanceHeroku.post<LoginResponseType>('/auth/login', data);\r\n  },\r\n  me() {\r\n    return instanceHeroku.post('auth/me');\r\n  },\r\n  updateMe(name: string, avatar: string, userId: string) {\r\n    return instanceHeroku.put('auth/me', { name, avatar, userId });\r\n  },\r\n  logout() {\r\n    return instanceHeroku.delete('auth/me');\r\n  },\r\n};\r\n\r\nexport const restoreAPI = {\r\n  restorePassword: async (email: string | null) => {\r\n    const promise = await instanceHeroku.post<ResponseRestoreType>(\r\n      'auth/forgot',\r\n      {\r\n        email,\r\n        from: 'dreamonaut@mail.ru',\r\n        message: `<div style=\"background-color: lime; padding: 15px\">\r\n              password recovery link:\r\n              <a href='http://localhost:3000/new_project/#/new-password/$token$'>\r\n              Follow the link to set a new password</a></div>`,\r\n      }\r\n    );\r\n    return promise;\r\n  },\r\n  setNewPassword: async (password: string, resetPasswordToken: string) => {\r\n    const promise = await instanceHeroku.post<ResponseRestoreType>(\r\n      'auth/set-new-password',\r\n      {\r\n        password: password,\r\n        resetPasswordToken: resetPasswordToken,\r\n      }\r\n    );\r\n    return promise;\r\n  },\r\n};\r\nexport const registrationAPI = {\r\n  setRegistration(data: RegistrationParamsType) {\r\n    return instanceHeroku.post<ResponseRegistrationType>('auth/register', data);\r\n  },\r\n};\r\n//Auth Type\r\n// Request types\r\nexport type RegistrationParamsType = {\r\n  email: string;\r\n  password: string;\r\n};\r\nexport type LoginDataType = {\r\n  email: string;\r\n  password: string;\r\n  rememberMe?: boolean;\r\n};\r\n\r\n//Response types\r\ntype ResponseRestoreType = {\r\n  info: string;\r\n  error?: string;\r\n};\r\n\r\ntype ResponseLoginRegistrationType = {\r\n  email?: string;\r\n  created?: string;\r\n  isAdmin?: boolean;\r\n  name: string;\r\n  publicCardPacksCount?: number;\r\n  rememberMe?: boolean;\r\n  updated?: string;\r\n  verified?: boolean;\r\n  _id?: string;\r\n};\r\ntype RegistrationType = {\r\n  __v: number;\r\n};\r\ntype LoginType = {\r\n  avatar?: string;\r\n  error?: string;\r\n};\r\n\r\ntype ResponseRegistrationType = ResponseLoginRegistrationType &\r\n  RegistrationType;\r\n\r\nexport type LoginResponseType = ResponseLoginRegistrationType & LoginType;\r\n\r\n//Cards API\r\nexport const cardsAPI = {\r\n  getCards: async (\r\n    cardsPackId: string,\r\n    page: number | undefined,\r\n    pageCount: number | undefined\r\n  ) => {\r\n    return instanceHeroku.get(\r\n      `cards/card?cardsPack_id=${cardsPackId}&page=${page}&pageCount=${pageCount}`\r\n    );\r\n  },\r\n  addCard: async (cardsPackId: string, question: string, answer: string) => {\r\n    return instanceHeroku.post('cards/card', {\r\n      card: {\r\n        cardsPack_id: `${cardsPackId}`,\r\n        question: `${question}`,\r\n        answer: `${answer}`,\r\n      },\r\n    });\r\n  },\r\n  delCard: async (cardId: string) => {\r\n    return instanceHeroku.delete(`cards/card?id=${cardId}`);\r\n  },\r\n  updateCard: async (cardId: string, question?: string, answer?: string) => {\r\n    return instanceHeroku.put('cards/card', {\r\n      card: {\r\n        _id: `${cardId}`,\r\n        question: question,\r\n        answer: answer,\r\n      },\r\n    });\r\n  },\r\n  addPack: async () => {\r\n    return instanceHeroku.post('/cards/pack', {\r\n      cardsPack: {},\r\n    });\r\n  },\r\n};\r\n\r\n// type ResponseCardType = {\r\n//     answer: string;\r\n//     question: string;\r\n//     cardsPack_id: string;\r\n//     grade: number;\r\n//     rating: number;\r\n//     shots: number;\r\n//     type: string;\r\n//     user_id: string;\r\n//     created: string;\r\n//     updated: string;\r\n//     __v: number;\r\n//     _id: string;\r\n// };\r\n//\r\n// type ResponseCardOptionsType = {\r\n//     cardsTotalCount: number;\r\n//     maxGrade: number;\r\n//     minGrade: number;\r\n//     page: number;\r\n//     pageCount: number;\r\n//     packUserId: string;\r\n// }\r\n","\r\nimport {authApi, LoginDataType} from \"../../m3-dal/api\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {AppRootStateType} from \"../state/store\";\r\n\r\nexport type initialAuthStateType = {\r\n    isLoggedIn: boolean\r\n    error: string | null\r\n    isFetching: boolean\r\n    isInitialized: boolean\r\n    authUserData: {\r\n        name: string\r\n        avatar: string\r\n        userId: string\r\n    }\r\n\r\n}\r\nconst intialState: initialAuthStateType = {\r\n    isLoggedIn: false,\r\n    error: null,\r\n    isFetching: false,\r\n    isInitialized: false,\r\n    authUserData: {\r\n        name: \"\",\r\n        avatar: \"\",\r\n        userId: \"\"\r\n    }\r\n}\r\n\r\n//reducers\r\nexport const authReducer = (state = intialState, action: ActionLoginType): initialAuthStateType => {\r\n    switch (action.type) {\r\n        case \"auth/SET-IS-LOGGED-IN\": {\r\n            return {...state, isLoggedIn: action.value}\r\n        }\r\n        case \"auth/ERROR\": {\r\n            return {...state, error: action.error}\r\n        }\r\n        case \"auth/INITIALIZED\": {\r\n            return {...state, isInitialized: action.isInitialized}\r\n        }\r\n        case \"auth/SET-IS-FETCHING\": {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case \"auth/SET-USER-DATA\": {\r\n            return {\r\n                ...state,\r\n                authUserData: {\r\n                    ...state.authUserData,\r\n                    name: action.name,\r\n                    avatar: action.avatar,\r\n                    userId: action.userId\r\n                }\r\n\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n//actions\r\n\r\nexport const setErrorAC = (error: string | null) => ({type: \"auth/ERROR\", error} as const)\r\nexport const isLogedInAC = (value: boolean) => ({type: \"auth/SET-IS-LOGGED-IN\", value} as const)\r\nexport const setIsFetchingAC = (isFetching: boolean) => ({type: \"auth/SET-IS-FETCHING\", isFetching} as const)\r\nexport const setIsInitialized = (isInitialized: boolean) => ({type: 'auth/INITIALIZED', isInitialized} as const)\r\nexport const setUserData = (name: string, avatar: string, userId: string) => ({type: 'auth/SET-USER-DATA', name, avatar, userId} as const)\r\n\r\nexport type ActionLoginType =\r\n    | ReturnType<typeof isLogedInAC>\r\n    | ReturnType<typeof setErrorAC>\r\n    | ReturnType<typeof setIsFetchingAC>\r\n    | ReturnType<typeof setIsInitialized>\r\n    | ReturnType<typeof setUserData>\r\n\r\ntype ThunkAuthType = ThunkAction<void, AppRootStateType, unknown, ActionLoginType>\r\n//thunk\r\nexport const loginTC = (data: LoginDataType): ThunkAuthType => async (dispatch) => {\r\n    try {\r\n        dispatch(setIsFetchingAC(true));\r\n        await authApi.login(data);\r\n        dispatch(isLogedInAC(true));\r\n    } catch (e) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        dispatch(setErrorAC(error));\r\n        console.log('Error: ', {...e});\r\n        return console.log(error);\r\n    } finally {\r\n        dispatch(setIsFetchingAC(false));\r\n    }\r\n}\r\n\r\nexport const logoutTC = (): ThunkAuthType => async (dispatch) => {\r\n    try {\r\n        dispatch(setIsFetchingAC(true));\r\n        await authApi.logout();\r\n        dispatch(isLogedInAC(false));\r\n    } finally {\r\n        dispatch(setIsFetchingAC(false));\r\n    }\r\n}\r\n\r\nexport const authMeTC = (): ThunkAuthType => async (dispatch, getState) => {\r\n    try {\r\n        dispatch(setIsFetchingAC(true));\r\n        const res = await authApi.me();\r\n        dispatch(setUserData(res.data.name, res.data.avatar, res.data._id))\r\n        dispatch(setIsInitialized(true));\r\n        dispatch(isLogedInAC(true));\r\n    } finally {\r\n        dispatch(setIsFetchingAC(false));\r\n    }\r\n}\r\n\r\nexport const updateMeDataTC = (name: string, avatar: string, userId: string): ThunkAuthType => async (dispatch, getState) => {\r\n    try {\r\n        dispatch(setIsFetchingAC(true));\r\n        const res = await authApi.updateMe(name, avatar, userId)\r\n        dispatch(setUserData(res.data.updatedUser.name, res.data.updatedUser.avatar, res.data._id))\r\n    } catch (e) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        dispatch(setErrorAC(error))\r\n        console.log('Error: ', {...e})\r\n        return console.log(error)\r\n    }\r\n    finally {\r\n        dispatch(setIsFetchingAC(false));\r\n    }\r\n}\r\n\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./CommonButton.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n    error?: string\r\n    name: string\r\n}\r\n\r\nconst CommonButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        error,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n\r\n    return (\r\n        <button\r\n            className={s.btn}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        >{restProps.name}</button>\r\n    );\r\n}\r\n\r\nexport default CommonButton;\r\n","export default __webpack_public_path__ + \"static/media/avatar.6afeb838.png\";","export default __webpack_public_path__ + \"static/media/preloader.259f14e1.svg\";","import React from \"react\";\r\nimport preloader from \"./../../assets/images/preloader.svg\";\r\nimport style from \"./Preloader.module.css\"\r\n\r\nexport const Preloader = () => {\r\n    return (\r\n        <div className={style.preloaderContainer}>\r\n            <div>Loading:</div>\r\n            <img src={preloader} alt=\"preloader\"/>\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {AppRootStateType} from '../../../m2-bll/state/store';\r\nimport {PATH} from '../../routes/Routes';\r\nimport {authMeTC, initialAuthStateType, logoutTC, updateMeDataTC} from '../../../m2-bll/redusers/auth-reducer';\r\nimport CommonButton from '../../../common/c2-CommonButton/CommonButton';\r\nimport style from './Profile.module.css';\r\nimport avatar from './../../../assets/images/avatar.png'\r\nimport {Preloader} from \"../../preloader/Preloader\";\r\n\r\n\r\nexport const Profile = () => {\r\n    const dispatch = useDispatch();\r\n    const {isInitialized, isLoggedIn, authUserData, isFetching} = useSelector<AppRootStateType,\r\n        initialAuthStateType>((state) => state.auth);\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [userName, setUserName] = useState(authUserData.name)\r\n    const [userAvatar, setUserAvatar] = useState(authUserData.avatar)\r\n\r\n    useEffect(() => {\r\n        if (isLoggedIn && isInitialized) {\r\n            dispatch(updateMeDataTC(userName, userAvatar, authUserData.userId))\r\n        }\r\n        if (!isInitialized) {\r\n            dispatch(authMeTC());\r\n        }\r\n    }, []);\r\n\r\n    const logoutCallBack = () => {\r\n        dispatch(logoutTC());\r\n    };\r\n\r\n    const onNameChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setUserName(e.currentTarget.value)\r\n    }\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n        setUserName(userName);\r\n    }\r\n\r\n    const activateViewMode = () => {\r\n        setEditMode(false)\r\n        dispatch(updateMeDataTC(userName, userAvatar, authUserData.userId))\r\n    }\r\n\r\n    if (!isLoggedIn) {\r\n        return <Redirect to={PATH.LOGIN}/>;\r\n    }\r\n    return (\r\n        //need to fix - hardcode avatar\r\n        <div className={style.profileBlock}>\r\n            <div>{authUserData.avatar\r\n                ? <img src={avatar} alt=\"user-avatar\"/>\r\n                : authUserData.avatar}\r\n            </div>\r\n            <div>\r\n                {editMode\r\n                    ? <input type='text'\r\n                             onChange={onNameChangeHandler}\r\n                             autoFocus\r\n                             onBlur={activateViewMode}\r\n                             value={userName}/>\r\n                    : <span onDoubleClick={activateEditMode}>{isFetching ? <Preloader/> : authUserData.name}</span>\r\n                }\r\n            </div>\r\n            <div>\r\n                <CommonButton name={'logout'} onClick={logoutCallBack}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./CommonInput.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    label?: string\r\n    formikFieldsProps?: any\r\n    error?: any\r\n    onChange?: (e: ChangeEvent<HTMLInputElement>) => void\r\n    onBlur?: () => void\r\n    value?: any\r\n};\r\n\r\nconst CommonInput: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        formikFieldsProps,\r\n        label,\r\n        error,\r\n        onChange,\r\n        onBlur,\r\n        value,\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n\r\n    return (\r\n        <>\r\n            <div className={s.group}>\r\n                <input\r\n                    type={type}\r\n                    {...formikFieldsProps}\r\n                    // onChange={onChange}\r\n                    // onBlur={onBlur}\r\n                    // value={value}\r\n                    // autoFocus\r\n                    required\r\n                />\r\n                <span className={s.highlight}> </span>\r\n                <span className={s.bar}> </span>\r\n                <label>{label}</label>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CommonInput;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./CommonCheckbox.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n    formikFieldsProps?: any\r\n};\r\n\r\nconst CommonCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n        formikFieldsProps,\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n\r\n\r\n\r\n    return (<div className={s.cbContainer}>\r\n        <label>\r\n            <input className={s.optionInput}\r\n                type={\"checkbox\"}\r\n                {...formikFieldsProps}\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            /> Remember me\r\n        </label>\r\n        </div> // благодаря label нажатие на спан передастся в инпут\r\n    );\r\n}\r\n\r\nexport default CommonCheckbox;\r\n","import React from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../m2-bll/state/store\";\r\nimport {initialAuthStateType, loginTC} from \"../../../m2-bll/redusers/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {useFormik} from \"formik\";\r\nimport CommonInput from \"../../../common/c1-CommonInput/CommonInput\";\r\nimport CommonButton from \"../../../common/c2-CommonButton/CommonButton\";\r\nimport style from \"./../../../assets/style/Common.module.css\";\r\nimport CommonCheckbox from \"../../../common/c3-CommonCheckbox/CommonCheckbox\";\r\nimport s from \"./Login.module.css\"\r\nimport {Preloader} from \"../../preloader/Preloader\";\r\n\r\ntype FormikErrorType = {\r\n    email?: string\r\n    password?: string\r\n    rememberMe?: boolean\r\n}\r\n\r\nexport const Login = () => {\r\n    const dispatch = useDispatch() //разобраться с useDispatch\r\n    const {isFetching, error, isLoggedIn, isInitialized} = useSelector<AppRootStateType, initialAuthStateType>(state => state.auth);\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            rememberMe: false\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n\r\n            if (!values.password) {\r\n                errors.password = 'Required';\r\n            } else if (values.password.length > 15) {\r\n                errors.password = 'Password must be 15 characters or less';\r\n            } else if (values.password.length < 8) {\r\n                errors.password = 'Password must be 8 characters or more ';\r\n            }\r\n            return errors;\r\n        },\r\n\r\n        onSubmit: values => {\r\n            dispatch(loginTC(values))\r\n\r\n        },\r\n    })\r\n    if (isLoggedIn) {\r\n        console.log(isLoggedIn, isInitialized)\r\n        return <Redirect to={\"/\"}/>\r\n    }\r\n    return (\r\n        <div className={style.commonContainer}>\r\n            <h1 className={style.title}>Login Here</h1>\r\n            <div className={style.error}>{error ? error : null}</div>\r\n            <form className={style.formBlock} onSubmit={formik.handleSubmit}>\r\n                <CommonInput\r\n                    type={\"text\"}\r\n                    label={\"Email\"}\r\n                    formikFieldsProps={{...formik.getFieldProps(\"email\")}}/>\r\n                {formik.touched.email && formik.errors.email ?\r\n                    <div className={style.registrationError}>{formik.errors.email}</div> : null}\r\n\r\n                <CommonInput\r\n                    type={\"password\"}\r\n                    label={\"Password\"}\r\n                    formikFieldsProps={{...formik.getFieldProps(\"password\")}}/>\r\n                {formik.touched.password && formik.errors.password ?\r\n                    <div className={style.registrationError}>{formik.errors.password}</div> : null}\r\n\r\n                <div className={s.checkbox}>\r\n                    <CommonCheckbox\r\n                        type={\"checkbox\"}\r\n                        formikFieldsProps={{...formik.getFieldProps(\"rememberMe\")}}/>\r\n\r\n                </div>\r\n                {isFetching ? <Preloader/> : <CommonButton type={\"submit\"} name={\"Login\"}/>}\r\n            </form>\r\n        </div>\r\n    )\r\n}","import {Dispatch} from 'redux';\r\nimport {restoreAPI} from '../../m3-dal/api';\r\nimport {setIsFetchingAC} from \"./auth-reducer\";\r\n\r\nconst SUCCESS_SUBMIT = 'restore/SUCCESS_SUBMIT';\r\nconst FAILED_SUBMIT = 'restore/FAILED_SUBMIT';\r\nconst INIT = 'restore/INIT';\r\nconst SET_IS_PASSWORD_CHANGED = 'restore/SET_IS_PASSWORD_CHANGED';\r\n\r\ntype SuccessSubmitType = {\r\n    type: typeof SUCCESS_SUBMIT;\r\n    status: string;\r\n};\r\n\r\ntype FailedSubmitType = {\r\n    type: typeof FAILED_SUBMIT;\r\n    error: string;\r\n    status: string;\r\n};\r\n\r\ntype InitType = {\r\n    type: typeof INIT;\r\n};\r\n\r\ntype SetIsPasswordChangedType = {\r\n    type: typeof SET_IS_PASSWORD_CHANGED;\r\n    isPasswordChanged: boolean;\r\n};\r\n\r\ntype ActionsType =\r\n    | SuccessSubmitType\r\n    | FailedSubmitType\r\n    | InitType\r\n    | SetIsPasswordChangedType;\r\n\r\nexport type RestoreStateType = {\r\n    currentEmail: null | string;\r\n    error: null | string;\r\n    status: null | string;\r\n    isPasswordChanged: boolean;\r\n};\r\n\r\nexport const successSubmit = (status: string): SuccessSubmitType => ({type: SUCCESS_SUBMIT, status,});\r\nexport const failedSubmit = (error: string, status: string): FailedSubmitType => ({\r\n    type: FAILED_SUBMIT,\r\n    error,\r\n    status,\r\n});\r\nexport const initRestorePage = (): InitType => ({type: INIT,});\r\nexport const setIsPasswordChanged = (isPasswordChanged: boolean): SetIsPasswordChangedType => ({\r\n    type: SET_IS_PASSWORD_CHANGED,\r\n    isPasswordChanged,\r\n});\r\n\r\nconst initialState: RestoreStateType = {\r\n    currentEmail: null,\r\n    error: null,\r\n    status: null,\r\n    isPasswordChanged: false,\r\n};\r\n\r\nexport const restoreReducer = (state: RestoreStateType = initialState, action: ActionsType) => {\r\n    switch (action.type) {\r\n        case SUCCESS_SUBMIT: {\r\n            return {...state, currentEmail: null, status: action.status};\r\n        }\r\n        case FAILED_SUBMIT: {\r\n            return {\r\n                ...state,\r\n                currentEmail: null,\r\n                error: action.error,\r\n                status: action.status,\r\n            };\r\n        }\r\n        case INIT: {\r\n            return {...state, status: null, error: null};\r\n        }\r\n        case SET_IS_PASSWORD_CHANGED: {\r\n            return {...state, isPasswordChanged: action.isPasswordChanged};\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const restorePassword = (email: string | null) => async (dispatch: Dispatch) => {\r\n    try {\r\n        dispatch(setIsFetchingAC(true))\r\n        await restoreAPI.restorePassword(email);\r\n        dispatch(setIsFetchingAC(false))\r\n        dispatch(successSubmit('New password send to your email'));\r\n    } catch (e) {\r\n        dispatch(setIsFetchingAC(false))\r\n        dispatch(failedSubmit(e.response.data.error, 'Email not found'));\r\n    }\r\n};\r\n\r\nexport const setNewPassword = (password: string, token: string) => async (dispatch: Dispatch) => {\r\n    try {\r\n        dispatch(setIsFetchingAC(true))\r\n        await restoreAPI.setNewPassword(password, token);\r\n        dispatch(setIsFetchingAC(false))\r\n        dispatch(successSubmit('Password has been changed'));\r\n        setTimeout(() => dispatch(setIsPasswordChanged(true)), 3000);\r\n    } catch (e) {\r\n        dispatch(setIsFetchingAC(false))\r\n        dispatch(failedSubmit(e.response.data.error, 'Error'));\r\n    }\r\n};\r\n","import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {\r\n    RestoreStateType,\r\n    setNewPassword,\r\n    initRestorePage,\r\n} from '../../../m2-bll/redusers/restore-reducer';\r\nimport {Redirect, useParams} from 'react-router-dom';\r\nimport {AppRootStateType} from '../../../m2-bll/state/store';\r\nimport {useFormik} from 'formik';\r\nimport CommonButton from '../../../common/c2-CommonButton/CommonButton';\r\nimport CommonInput from '../../../common/c1-CommonInput/CommonInput';\r\nimport style from './../../../assets/style/Common.module.css';\r\nimport {PATH} from '../../routes/Routes';\r\nimport {Preloader} from \"../../preloader/Preloader\";\r\n\r\ntype FormikErrorType = {\r\n    passwordConfirm?: string;\r\n    password?: string;\r\n};\r\n\r\nexport const NewPassword = () => {\r\n    const dispatch = useDispatch();\r\n    const {resetPasswordToken} = useParams<Record<string, string>>();\r\n    const {status, isPasswordChanged} = useSelector<AppRootStateType, RestoreStateType>(state => state.restore);\r\n    const isFetching = useSelector<AppRootStateType, boolean>(state => state.auth.isFetching);\r\n\r\n    useEffect(() => {\r\n        dispatch(initRestorePage());\r\n    }, []);\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            passwordConfirm: '',\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n\r\n            if (!values.password) {\r\n                errors.password = 'Required';\r\n            } else if (values.password.length > 15) {\r\n                errors.password = 'Password must be 15 characters or less';\r\n            } else if (values.password.length < 8) {\r\n                errors.password = 'Password must be more than 7 characters ';\r\n            }\r\n\r\n            if (!values.passwordConfirm) {\r\n                errors.passwordConfirm = 'Required';\r\n            } else if (values.password !== values.passwordConfirm) {\r\n                errors.passwordConfirm = 'Password and Confirm Password must be equal';\r\n            }\r\n            return errors;\r\n        },\r\n\r\n        onSubmit: (values) => {\r\n            if (values.password === values.passwordConfirm) {\r\n                dispatch(setNewPassword(values.password, resetPasswordToken));\r\n            }\r\n        },\r\n    });\r\n\r\n    if (isPasswordChanged) {\r\n        return <Redirect to={PATH.LOGIN}/>\r\n    }\r\n    return (\r\n        <div className={style.commonContainer}>\r\n            <h1 className={style.title}>Set new password</h1>\r\n            <form className={style.formBlock} onSubmit={formik.handleSubmit}>\r\n                <div className={style.error}>{status && status}</div>\r\n                <CommonInput\r\n                    type={'password'}\r\n                    label={'Password'}\r\n                    formikFieldsProps={{...formik.getFieldProps('password')}}\r\n                />\r\n\r\n                {formik.touched.password && formik.errors.password ? (\r\n                    <div className={style.registrationError}>\r\n                        {formik.errors.password}\r\n                    </div>\r\n                ) : null}\r\n\r\n                <CommonInput\r\n                    type={'password'}\r\n                    label={'Confirm Password'}\r\n                    formikFieldsProps={{...formik.getFieldProps('passwordConfirm')}}\r\n                />\r\n\r\n                {formik.touched.passwordConfirm && formik.errors.passwordConfirm ? (\r\n                    <div className={style.registrationError}>\r\n                        {formik.errors.passwordConfirm}\r\n                    </div>\r\n                ) : null}\r\n                {isFetching ? <Preloader/> : <CommonButton type={'submit'} name={'Send'}/>}\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n","import {Dispatch} from \"redux\";\r\nimport {registrationAPI, RegistrationParamsType} from \"../../m3-dal/api\";\r\nimport {setIsFetchingAC} from \"./auth-reducer\";\r\n\r\nconst initialState = {\r\n    isRegistered: false,\r\n    error: null\r\n}\r\n\r\nexport type InitialStateType = {\r\n    isRegistered: boolean\r\n    error: null | string\r\n}\r\n\r\nexport const registrationReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"registration/SET-REGISTRATION\":\r\n            return {...state, isRegistered: action.value}\r\n        case \"registration/SET-ERROR\":\r\n            return {...state, error: action.error}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//actions\r\nconst setIsRegisteredAC = (value: boolean) => ({type: \"registration/SET-REGISTRATION\", value} as const)\r\nconst setErrorAC = (error: string | null) => ({type: \"registration/SET-ERROR\", error} as const)\r\n//thunks\r\nexport const registrationTC = (data: RegistrationParamsType) => (dispatch: Dispatch<ActionsType>) => {\r\n    dispatch(setIsFetchingAC(true))\r\n    registrationAPI.setRegistration(data)\r\n        .then(res => {\r\n            dispatch(setIsRegisteredAC(true))\r\n        })\r\n        .catch(e => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console');\r\n            console.log('Error: ', {...e})\r\n            dispatch(setErrorAC(error))\r\n        })\r\n        .finally(() => {\r\n            dispatch(setIsFetchingAC(false))\r\n        })\r\n}\r\n\r\ntype ActionsType =\r\n    | ReturnType<typeof setIsRegisteredAC>\r\n    | ReturnType<typeof setErrorAC>\r\n    | ReturnType<typeof setIsFetchingAC>\r\n","import React from \"react\";\r\nimport style from \"./../../../assets/style/Common.module.css\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {InitialStateType, registrationTC} from \"../../../m2-bll/redusers/registration-reducer\";\r\nimport {AppRootStateType} from \"../../../m2-bll/state/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../../routes/Routes\";\r\nimport {useFormik} from \"formik\";\r\nimport CommonButton from \"../../../common/c2-CommonButton/CommonButton\";\r\nimport CommonInput from \"../../../common/c1-CommonInput/CommonInput\";\r\nimport {Preloader} from \"../../preloader/Preloader\";\r\n\r\ntype FormikErrorType = {\r\n    email?: string\r\n    password?: string\r\n    passwordConfirm?: string\r\n}\r\n\r\nexport const Registration = () => {\r\n    const {isRegistered, error} = useSelector<AppRootStateType, InitialStateType>(state => state.registration)\r\n    const isFetching = useSelector<AppRootStateType, boolean>(state => state.auth.isFetching)\r\n    const dispatch = useDispatch();\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            passwordConfirm: ''\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n\r\n            if (!values.password) {\r\n                errors.password = 'Required';\r\n            } else if (values.password.length > 15) {\r\n                errors.password = 'Password must be 15 characters or less';\r\n            } else if (values.password.length < 8) {\r\n                errors.password = 'Password must be more than 7 characters ';\r\n            }\r\n\r\n            if (!values.passwordConfirm) {\r\n                errors.passwordConfirm = 'Required';\r\n            } else if (values.password !== values.passwordConfirm) {\r\n                errors.passwordConfirm = 'Password and Confirm Password must be equal'\r\n            }\r\n            return errors;\r\n        },\r\n\r\n        onSubmit: values => {\r\n            if (values.password === values.passwordConfirm) {\r\n                dispatch(registrationTC(values))\r\n            }\r\n        },\r\n    })\r\n\r\n    if (isRegistered) {\r\n        return <Redirect to={PATH.LOGIN}/>\r\n    }\r\n\r\n    return (\r\n        <div className={style.commonContainer}>\r\n            <h1 className={style.title}>Registration</h1>\r\n            <form className={style.formBlock} onSubmit={formik.handleSubmit}>\r\n                <div className={style.error}>{error ? error : null}</div>\r\n\r\n                <CommonInput\r\n                    type={\"text\"}\r\n                    label={\"Email\"}\r\n                    error={error || (formik.errors && formik.touched)}\r\n                    formikFieldsProps={{...formik.getFieldProps(\"email\")}}/>\r\n\r\n                {formik.touched.email && formik.errors.email ?\r\n                    <div className={style.registrationError}>{formik.errors.email}</div> : null}\r\n\r\n                <CommonInput\r\n                    type={\"password\"}\r\n                    label={\"Password\"}\r\n                    formikFieldsProps={{...formik.getFieldProps(\"password\")}}/>\r\n\r\n                {formik.touched.password && formik.errors.password ?\r\n                    <div className={style.registrationError}>{formik.errors.password}</div> : null}\r\n\r\n                    <CommonInput\r\n                        type={\"password\"}\r\n                        label={\"Confirm Password\"}\r\n                        formikFieldsProps={{...formik.getFieldProps(\"passwordConfirm\")}}\r\n                    />\r\n\r\n                {formik.touched.passwordConfirm && formik.errors.passwordConfirm ?\r\n                    <div className={style.registrationError}>{formik.errors.passwordConfirm}</div> : null}\r\n\r\n                {isFetching ? <Preloader/> : <CommonButton type={\"submit\"} name={\"Sign up\"}/>}\r\n            </form>\r\n        </div>\r\n    )\r\n}","import React, {useCallback, useEffect} from 'react';\r\nimport {\r\n    initRestorePage,\r\n    restorePassword,\r\n    RestoreStateType,\r\n} from '../../../m2-bll/redusers/restore-reducer';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../../m2-bll/state/store';\r\nimport {useFormik} from 'formik';\r\nimport CommonButton from '../../../common/c2-CommonButton/CommonButton';\r\nimport CommonInput from '../../../common/c1-CommonInput/CommonInput';\r\nimport style from './../../../assets/style/Common.module.css';\r\nimport {Preloader} from '../../preloader/Preloader';\r\n\r\ntype FormikErrorType = {\r\n    email?: string;\r\n};\r\n\r\nexport const RestorePassword = () => {\r\n    const dispatch = useDispatch();\r\n    const {currentEmail, status} = useSelector<AppRootStateType,\r\n        RestoreStateType>((state) => state.restore);\r\n    const isFetching = useSelector<AppRootStateType, boolean>(\r\n        (state) => state.auth.isFetching\r\n    );\r\n\r\n    const submitRestorePassword = useCallback(\r\n        (currentEmail) => {\r\n            dispatch(restorePassword(currentEmail));\r\n        },\r\n        [currentEmail]\r\n    );\r\n\r\n    useEffect(() => {\r\n        dispatch(initRestorePage());\r\n    }, []);\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (\r\n                /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)/.test(\r\n                    values.email\r\n                )\r\n            ) {\r\n                return undefined;\r\n            } else {\r\n                errors.email = 'Write correct email';\r\n            }\r\n\r\n            return errors;\r\n        },\r\n\r\n        onSubmit: (values) => {\r\n            submitRestorePassword(values.email);\r\n        },\r\n    });\r\n\r\n    return (\r\n        <div className={style.commonContainer}>\r\n            <h1 className={style.title}>Restore</h1>\r\n            <form className={style.formBlock} onSubmit={formik.handleSubmit}>\r\n                <div className={style.error}>{status && status}</div>\r\n                <CommonInput\r\n                    type={'text'}\r\n                    label={'Email'}\r\n                    formikFieldsProps={{...formik.getFieldProps('email')}}\r\n                />\r\n\r\n                {formik.touched.email && formik.errors.email ? (\r\n                    <div className={style.registrationError}>{formik.errors.email}</div>\r\n                ) : null}\r\n                {isFetching ? (\r\n                    <Preloader/>\r\n                ) : (\r\n                    <CommonButton type={'submit'} name={'Send request'}/>\r\n                )}\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport CommonButton from \"../../../common/c2-CommonButton/CommonButton\";\r\nimport CommonInput from \"../../../common/c1-CommonInput/CommonInput\";\r\nimport CommonCheckbox from \"../../../common/c3-CommonCheckbox/CommonCheckbox\";\r\nimport style from \"./Test.module.css\"\r\n\r\nexport const Test = () => {\r\n    return (\r\n        <div className={style.test}>\r\n            <CommonButton name={'test'}/>\r\n            <CommonInput label={'Test'}/>\r\n            <CommonCheckbox/>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\n\nexport const Error404 = () => {\n    return (\n        <div>\n            Error404\n        </div>\n    )\n}","import {cardsPackAPI} from \"../../m3-dal/api\";\r\nimport {ActionLoginType, authMeTC, setErrorAC, setIsFetchingAC} from \"./auth-reducer\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {AppRootStateType} from \"../state/store\";\r\n\r\n\r\nconst initialState = {\r\n    cardsPack: [] as CardPacksType[],\r\n    pageSize: 4,\r\n    currentPage: 1,\r\n    cardPacksTotalCount: 0,\r\n    portionSize: 10,\r\n    userPackId: ''\r\n}\r\n\r\n//types\r\nexport type CardsPackInitialStateType = typeof initialState\r\nexport type CardPacksType = {\r\n    _id?: string\r\n    user_id?: string\r\n    user_name?: string\r\n    private?: boolean\r\n    name: string\r\n    path?: string\r\n    grade?: number\r\n    shots?: number\r\n    cardsCount?: number | undefined\r\n    type?: string\r\n    rating?: number\r\n    created?: string | undefined\r\n    updated?: string\r\n    more_id?: string\r\n    __v?: number\r\n}\r\n\r\n//actions\r\nexport const setCardsPacksAC = (setPack: CardPacksType[]) => ({type: 'pack/SET-PACKS', setPack} as const)\r\nexport const setTotalCardPacksCount = (totalCardPacksCount: number) => ({\r\n    type: \"pack/SET_TOTAL_CARD_PACKS_COUNT\",\r\n    totalCardPacksCount\r\n} as const)\r\nexport const setCurrentPage = (page: number) => ({type: \"pack/SET_CURRENT_PAGE\", page} as const)\r\n\r\ntype ActionPacksType =\r\n    | ActionLoginType\r\n    | ReturnType<typeof setCardsPacksAC>\r\n    | ReturnType<typeof setErrorAC>\r\n    | ReturnType<typeof setTotalCardPacksCount>\r\n    | ReturnType<typeof setCurrentPage>\r\n\r\ntype ThunkPacksType = ThunkAction<void, AppRootStateType, unknown, ActionPacksType>\r\n\r\n//reducers\r\nexport const cardPackReducer = (state = initialState, action: ActionPacksType): CardsPackInitialStateType => {\r\n    switch (action.type) {\r\n        case \"pack/SET-PACKS\": {\r\n            return {...state, cardsPack: action.setPack}\r\n        }\r\n        case \"pack/SET_TOTAL_CARD_PACKS_COUNT\":\r\n            return {\r\n                ...state, cardPacksTotalCount: action.totalCardPacksCount\r\n            }\r\n        case \"pack/SET_CURRENT_PAGE\":\r\n            return {\r\n                ...state, currentPage: action.page\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n//thunks\r\nexport const getPacks = (page: number | undefined, pageCount: number | undefined): ThunkPacksType => async (dispatch) => {\r\n    try {\r\n        dispatch(setIsFetchingAC(true));\r\n        await dispatch(authMeTC())\r\n        const res = await cardsPackAPI.getPacks(page, pageCount)\r\n        dispatch(setCardsPacksAC(res.data.cardPacks))\r\n        dispatch(setTotalCardPacksCount(res.data.cardPacksTotalCount))\r\n        console.log(res)\r\n    } catch (e) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        dispatch(setErrorAC(error))\r\n        console.log('Error: ', {...e})\r\n        return console.log(error)\r\n    } finally {\r\n        setTimeout(() => {\r\n            dispatch(setIsFetchingAC(false));\r\n        }, 1000)\r\n    }\r\n};\r\n\r\n\r\nexport const createNewPack = (cardPack: CardPacksType, page?: number, pageCount?: number): ThunkPacksType => async (dispatch) => {\r\n    try {\r\n        dispatch(setIsFetchingAC(true));\r\n        await cardsPackAPI.createPack(cardPack)\r\n        dispatch(setCurrentPage(1))\r\n        dispatch(getPacks(page, pageCount))\r\n    } catch (e) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        console.log('Error: ', {...e})\r\n        dispatch(setErrorAC(error))\r\n        return console.log(error)\r\n    } finally {\r\n        dispatch(setIsFetchingAC(false));\r\n    }\r\n}\r\n\r\nexport const deleteCardPack = (id: string, page?: number, pageCount?: number): ThunkPacksType => async (dispatch) => {\r\n    try {\r\n        dispatch(setIsFetchingAC(true))\r\n        await cardsPackAPI.deletePack(id)\r\n        dispatch(setCurrentPage(1))\r\n        await dispatch(getPacks(page, pageCount))\r\n    } catch (e) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        console.log('Error: ', {...e})\r\n        dispatch(setErrorAC(error))\r\n        return console.log(error)\r\n    } finally {\r\n        dispatch(setIsFetchingAC(false));\r\n    }\r\n}\r\n\r\nexport const updateCardPack = (cardPack: CardPacksType, page?: number, pageCount?: number): ThunkPacksType => async (dispatch) => {\r\n    try {\r\n        dispatch(setIsFetchingAC(true));\r\n        await cardsPackAPI.updatePack(cardPack)\r\n        dispatch(setCurrentPage(1))\r\n        dispatch(getPacks(page, pageCount))\r\n    } catch (e) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        console.log('Error: ', {...e})\r\n        dispatch(setErrorAC(error))\r\n        return console.log(error)\r\n    } finally {\r\n        dispatch(setIsFetchingAC(false));\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport s from '../Packs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { PATH } from '../../../routes/Routes';\r\nimport { useDispatch } from 'react-redux';\r\nimport { deleteCardPack } from '../../../../m2-bll/redusers/pack-reducer';\r\n\r\ntype PropsType = {\r\n  name: string;\r\n  cardsCount: number | undefined;\r\n  updated: string | undefined;\r\n  url: string | undefined;\r\n  id: string | undefined;\r\n  userAuthId: string;\r\n  user_id: string | undefined;\r\n  onUpdate: () => void;\r\n  cb: (id: string | undefined) => void;\r\n};\r\n\r\nexport const Pack: React.FC<PropsType> = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const onDeleteCardPackHandler = () => {\r\n      if (props.id) {\r\n          dispatch(deleteCardPack(props.id));\r\n      }\r\n  }\r\n  const onClickUpdateHandler = () => {\r\n    props.onUpdate();\r\n    props.cb(props.id);\r\n  };\r\n\r\n  return (\r\n    <div className={s.table}>\r\n      <div className={s.tableContainer}>\r\n        <div className={s.tableItem}>{props.name}</div>\r\n        <div className={s.tableItem}>{props.cardsCount}</div>\r\n        <div className={s.tableItem}>{props.updated}</div>\r\n        <div className={s.tableItem}>{props.url}</div>\r\n        <div className={s.tableItem}>\r\n          <button\r\n            onClick={onDeleteCardPackHandler}\r\n            disabled={props.userAuthId !== props.user_id}\r\n          >\r\n            del\r\n          </button>\r\n          <button\r\n            onClick={onClickUpdateHandler}\r\n            disabled={props.userAuthId !== props.user_id}\r\n          >\r\n            update\r\n          </button>\r\n        </div>\r\n        <div className={s.tableItem}>\r\n          <NavLink to={PATH.CARDS + '/' + props.id}>Cards</NavLink>\r\n          <NavLink to={PATH.LEARN + '/' + props.id}>Learn</NavLink>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, {useState} from \"react\";\r\nimport style from \"./Pagination.module.css\";\r\n\r\ntype PaginationPropsType = {\r\n    totalItemsCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onCurrentPage: (pageNumber: any) => void\r\n    portionSize: number\r\n    isFetching: boolean\r\n}\r\n\r\nexport const Pagination = (props: PaginationPropsType) => {\r\n    let pagesCount = Math.ceil(props.totalItemsCount / props.pageSize)\r\n\r\n    let pages: number[] = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    const portionCount = Math.ceil(pagesCount / props.portionSize)\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n    const leftPortionPageNumber = (portionNumber - 1) * props.portionSize + 1\r\n    const rightPortionPageNumber = portionNumber * props.portionSize\r\n\r\n    return (\r\n        <div className={style.pagination}>\r\n            {portionNumber > 1 && <button\r\n                onClick={() => setPortionNumber(portionNumber - 1)}\r\n                disabled={props.isFetching}\r\n                className={style.navigationButton}\r\n            >Prev</button>}\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map(p => <button\r\n                    key={p}\r\n                    className={props.currentPage === p\r\n                        ? style.currentButton\r\n                        : style.paginationButton\r\n                    }\r\n                    onClick={() => props.onCurrentPage(p)}\r\n                    disabled={props.isFetching}\r\n                >{p} </button>)}\r\n            {portionCount > portionNumber && <button\r\n                onClick={() => setPortionNumber(portionNumber + 1)}\r\n                disabled={props.isFetching}\r\n                className={style.navigationButton}\r\n            >Next</button>}\r\n        </div>\r\n    )\r\n}","import { useState, useEffect, useRef } from 'react';\r\n\r\nexport default function useComponentVisible(initialIsVisible: boolean) {\r\n  const [isComponentVisible, setIsComponentVisible] = useState(\r\n    initialIsVisible\r\n  );\r\n  const ref = useRef<HTMLDivElement>(null);\r\n\r\n  const handleHideDropdown = (event: KeyboardEvent) => {\r\n    if (event.key === 'Escape') {\r\n      setIsComponentVisible(false);\r\n    }\r\n  };\r\n\r\n  const handleClickOutside = (event: Event) => {\r\n    if (ref.current && !ref.current.contains(event.target as Node)) {\r\n      setIsComponentVisible(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('keydown', handleHideDropdown, true);\r\n    document.addEventListener('click', handleClickOutside, true);\r\n    return () => {\r\n      document.removeEventListener('keydown', handleHideDropdown, true);\r\n      document.removeEventListener('click', handleClickOutside, true);\r\n    };\r\n  });\r\n\r\n  return { ref, isComponentVisible, setIsComponentVisible };\r\n}\r\n","import React, { ReactChild } from 'react';\r\nimport s from './cards.module.css';\r\n\r\ntype PropsType = {\r\n  show: boolean;\r\n  closeCB: () => void;\r\n  children?: Array<ReactChild> | ReactChild;\r\n  onShow?: () => void;\r\n};\r\n\r\nconst ModalContainer = ({ show, closeCB, children, onShow }: PropsType) => {\r\n  return (\r\n    <>\r\n      {show && (\r\n        <>\r\n          <button className={s.btn} onClick={closeCB}>X</button>\r\n          {children}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ModalContainer;\r\n","import React, { useEffect, useState } from 'react';\r\nimport s from './Packs.module.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  CardPacksType,\r\n  CardsPackInitialStateType,\r\n  createNewPack,\r\n  getPacks,\r\n  setCurrentPage,\r\n  updateCardPack,\r\n} from '../../../m2-bll/redusers/pack-reducer';\r\nimport { AppRootStateType } from '../../../m2-bll/state/store';\r\nimport { Pack } from './pack/Pack';\r\nimport { Preloader } from '../../preloader/Preloader';\r\nimport { Pagination } from '../../../common/c4-Pagination/Pagination';\r\nimport { initialAuthStateType } from '../../../m2-bll/redusers/auth-reducer';\r\nimport useComponentVisible from '../cards/useComponentVisible';\r\nimport ModalContainer from '../cards/ModalContainer';\r\nimport { useFormik } from 'formik';\r\nimport style from './../../../assets/style/Common.module.css';\r\nimport CommonInput from '../../../common/c1-CommonInput/CommonInput';\r\nimport CommonButton from '../../../common/c2-CommonButton/CommonButton';\r\n\r\ntype FormikErrorType = {\r\n  packName?: string;\r\n};\r\n\r\ntype Formik2ErrorType = {\r\n  updatePackName?: string;\r\n};\r\n\r\nlet packId: string | undefined = '';\r\n\r\nexport const Packs = () => {\r\n  const dispatch = useDispatch();\r\n  const packs = useSelector<AppRootStateType, Array<CardPacksType>>(\r\n    (state) => state.packs.cardsPack\r\n  );\r\n  const {\r\n    cardPacksTotalCount,\r\n    portionSize,\r\n    currentPage,\r\n    pageSize,\r\n  } = useSelector<AppRootStateType, CardsPackInitialStateType>(\r\n    (state) => state.packs\r\n  );\r\n  const { isFetching } = useSelector<AppRootStateType, initialAuthStateType>(\r\n    (state) => state.auth\r\n  );\r\n  const userAuthId = useSelector<AppRootStateType, string>(\r\n    (state) => state.auth.authUserData.userId\r\n  );\r\n  const onUpdate = () => {\r\n    setIsShowModalDel(true);\r\n    setIsComponentVisibleDel(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getPacks(currentPage, pageSize));\r\n  }, []);\r\n\r\n  const getPackIdFromPackComponent = (id: string | undefined) => {\r\n    packId = id;\r\n  };\r\n\r\n  const mappedPacks = packs.map((p) => {\r\n    return (\r\n      <Pack\r\n        key={p._id}\r\n        name={p.name}\r\n        cardsCount={p.cardsCount}\r\n        updated={p.updated}\r\n        url={p.user_name}\r\n        id={p._id}\r\n        user_id={p.user_id}\r\n        userAuthId={userAuthId}\r\n        onUpdate={onUpdate}\r\n        cb={getPackIdFromPackComponent}\r\n      />\r\n    );\r\n  });\r\n\r\n  const onCurrentPage = (pageNumber: any) => {\r\n    dispatch(setCurrentPage(pageNumber));\r\n    dispatch(getPacks(pageNumber, pageSize));\r\n  };\r\n\r\n  const [isShowModal, setIsShowModal] = useState<boolean>(false);\r\n  const [isShowModalDel, setIsShowModalDel] = useState<boolean>(false);\r\n  const hideModal = () => {\r\n    setIsShowModal(false);\r\n  };\r\n  const hideModalDel = () => {\r\n    setIsShowModalDel(false);\r\n  };\r\n  const {\r\n    ref,\r\n    isComponentVisible,\r\n    setIsComponentVisible,\r\n  } = useComponentVisible(false);\r\n\r\n  const {\r\n    ref: ref2,\r\n    isComponentVisible: isComponentVisible2,\r\n    setIsComponentVisible: setIsComponentVisibleDel,\r\n  } = useComponentVisible(false);\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      packName: '',\r\n      updatePackName: '',\r\n    },\r\n    validate: (values) => {\r\n      const errors: FormikErrorType = {};\r\n\r\n      if (!values.packName) {\r\n        errors.packName = 'Required';\r\n      }\r\n      return errors;\r\n    },\r\n\r\n    onSubmit: (values) => {\r\n      dispatch(createNewPack({ name: values.packName }));\r\n      values.packName = '';\r\n      setIsShowModal(false);\r\n    },\r\n  });\r\n  const formik2 = useFormik({\r\n    initialValues: {\r\n      updatePackName: '',\r\n    },\r\n    validate: (values) => {\r\n      const errors: Formik2ErrorType = {};\r\n\r\n      if (!values.updatePackName) {\r\n        errors.updatePackName = 'Required';\r\n      }\r\n      return errors;\r\n    },\r\n\r\n    onSubmit: (values, e) => {\r\n      dispatch(updateCardPack({ _id: packId, name: values.updatePackName }));\r\n      values.updatePackName = '';\r\n      setIsShowModalDel(false);\r\n    },\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div className={s.table}>\r\n        <h1 className={s.title}>Packs</h1>\r\n        <Pagination\r\n          totalItemsCount={cardPacksTotalCount}\r\n          pageSize={pageSize}\r\n          currentPage={currentPage}\r\n          onCurrentPage={onCurrentPage}\r\n          portionSize={portionSize}\r\n          isFetching={isFetching}\r\n        />\r\n        <div className={s.tableContainer}>\r\n          <div className={s.tableItem}>Pack name</div>\r\n          <div className={s.tableItem}>Cards count</div>\r\n          <div className={s.tableItem}>Updated</div>\r\n          <div className={s.tableItem}>Url</div>\r\n          <div className={s.tableItem}>\r\n            <button\r\n              onClick={() => {\r\n                setIsShowModal(true);\r\n                setIsComponentVisible(true);\r\n              }}\r\n            >\r\n              add\r\n            </button>\r\n          </div>\r\n          <div className={s.tableItem}>Go to link</div>\r\n        </div>\r\n        {isFetching ? <Preloader /> : mappedPacks}\r\n      </div>\r\n\r\n      <div className={s.modal} ref={ref}>\r\n        {isComponentVisible && (\r\n          <ModalContainer show={isShowModal} closeCB={hideModal}>\r\n            <div className={style.commonContainer}>\r\n              <h2 className={style.title}>Add Pack</h2>\r\n              <form className={style.formBlock} onSubmit={formik.handleSubmit}>\r\n                <CommonInput\r\n                  type={'text'}\r\n                  label={'Pack Name'}\r\n                  formikFieldsProps={{ ...formik.getFieldProps('packName') }}\r\n                />\r\n\r\n                {formik.touched.packName && formik.errors.packName ? (\r\n                  <div className={style.registrationError}>\r\n                    {formik.errors.packName}\r\n                  </div>\r\n                ) : null}\r\n                <CommonButton type={'submit'} name={'Add pack'} />\r\n              </form>\r\n            </div>\r\n          </ModalContainer>\r\n        )}\r\n      </div>\r\n\r\n      <div className={s.modal} ref={ref2}>\r\n        {isComponentVisible2 && (\r\n          <ModalContainer show={isShowModalDel} closeCB={hideModalDel}>\r\n            <div className={style.commonContainer}>\r\n              <h2 className={style.title}>Update Pack</h2>\r\n              <form className={style.formBlock} onSubmit={formik2.handleSubmit}>\r\n                <CommonInput\r\n                  type={'text'}\r\n                  label={'Pack Name'}\r\n                  formikFieldsProps={{\r\n                    ...formik2.getFieldProps('updatePackName'),\r\n                  }}\r\n                />\r\n\r\n                {formik2.touched.updatePackName &&\r\n                formik2.errors.updatePackName ? (\r\n                  <div className={style.registrationError}>\r\n                    {formik2.errors.updatePackName}\r\n                  </div>\r\n                ) : null}\r\n                <CommonButton type={'submit'} name={'Update pack'} />\r\n              </form>\r\n            </div>\r\n          </ModalContainer>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { ThunkAction } from 'redux-thunk';\r\nimport { cardsAPI } from '../../m3-dal/api';\r\nimport { AppRootStateType } from '../state/store';\r\n\r\nconst GET_CARDS = 'cards/GET-CARDS';\r\nconst SET_IS_FETCHING = 'cards/SET-IS-FETCHING';\r\n\r\ntype GetCardsType = {\r\n  type: typeof GET_CARDS;\r\n  packId: string;\r\n  cards: Array<CardsType>;\r\n};\r\n\r\nexport type CardsType = {\r\n  answer: string;\r\n  answerImg?: string;\r\n  answerVideo?: string;\r\n  cardsPack_id: string;\r\n  comments?: string;\r\n  created: string;\r\n  grade: number;\r\n  more_id: string;\r\n  question: string;\r\n  questionImg?: string;\r\n  questionVideo?: string;\r\n  rating: number;\r\n  shots: number;\r\n  type: string;\r\n  updated: string;\r\n  user_id?: string;\r\n  __v?: number;\r\n  _id: string;\r\n};\r\n\r\ntype ActionsType =\r\n  | ReturnType<typeof GetCards>\r\n  | ReturnType<typeof setIsFetchingCardsAC>\r\n  | ReturnType<typeof setTotalCardsCount>\r\n  | ReturnType<typeof setCurrentPage>\r\n  | ReturnType<typeof setUserId>;\r\n\r\nexport type StateCardsType = {\r\n  cards: Array<CardsType>;\r\n  options: {};\r\n  isFetching: boolean;\r\n  cardsTotalCount: number;\r\n  pageSize: number;\r\n  currentPage: number;\r\n  portionSize: number;\r\n  userId: string;\r\n};\r\n\r\ntype ThunkCardType = ThunkAction<void, AppRootStateType, unknown, ActionsType>;\r\n\r\nexport const setIsFetchingCardsAC = () =>\r\n  ({ type: 'cards/SET-IS-FETCHING' } as const);\r\nexport const setTotalCardsCount = (totalCardsCount: number) =>\r\n  ({\r\n    type: 'SET_TOTAL_CARDS_COUNT',\r\n    totalCardsCount,\r\n  } as const);\r\nexport const setCurrentPage = (page: number) =>\r\n  ({ type: 'SET_CURRENT_PAGE', page } as const);\r\nexport const setUserId = (userId: string) =>\r\n  ({ type: 'SET_USER_ID', userId } as const);\r\n\r\nexport const GetCards = (\r\n  packId: string,\r\n  cards: Array<CardsType>\r\n): GetCardsType =>\r\n  ({\r\n    type: GET_CARDS,\r\n    packId,\r\n    cards,\r\n  } as const);\r\n\r\nconst initialState = {\r\n  cards: [],\r\n  options: {},\r\n  isFetching: false,\r\n  cardsTotalCount: 0,\r\n  pageSize: 5,\r\n  currentPage: 1,\r\n  portionSize: 4,\r\n  userId: '',\r\n};\r\n\r\nexport const cardsReducer = (\r\n  state: StateCardsType = initialState,\r\n  action: ActionsType\r\n) => {\r\n  switch (action.type) {\r\n    case GET_CARDS: {\r\n      return { ...state, cards: [...action.cards] };\r\n    }\r\n    case SET_IS_FETCHING: {\r\n      return { ...state, isFetching: !state.isFetching };\r\n    }\r\n    case 'SET_TOTAL_CARDS_COUNT':\r\n      return {\r\n        ...state,\r\n        cardsTotalCount: action.totalCardsCount,\r\n      };\r\n    case 'SET_CURRENT_PAGE':\r\n      return {\r\n        ...state,\r\n        currentPage: action.page,\r\n      };\r\n    case 'SET_USER_ID':\r\n      return {\r\n        ...state,\r\n        userId: action.userId,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getCardsByPackId = (\r\n  cardsPackId: string,\r\n  page?: number | undefined,\r\n  pageCount?: number | undefined\r\n): ThunkCardType => (dispatch) => {\r\n  try {\r\n    dispatch(setIsFetchingCardsAC());\r\n    cardsAPI.getCards(cardsPackId, page, pageCount).then((res) => {\r\n      console.log(res);\r\n      dispatch(GetCards(cardsPackId, res.data.cards));\r\n      dispatch(setTotalCardsCount(res.data.cardsTotalCount));\r\n      dispatch(setUserId(res.data.packUserId));\r\n      dispatch(setIsFetchingCardsAC());\r\n    });\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nexport const delCard = (\r\n  cardId: string,\r\n  cardsPackId: string,\r\n  page?: number,\r\n  pageCount?: number\r\n): ThunkCardType => (dispatch) => {\r\n  try {\r\n    cardsAPI.delCard(cardId).then(() => {\r\n      dispatch(getCardsByPackId(cardsPackId, page, pageCount));\r\n    });\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nexport const addCard = (\r\n  cardsPackId: string,\r\n  question: string,\r\n  answer: string,\r\n  page?: number,\r\n  pageCount?: number\r\n): ThunkCardType => (dispatch) => {\r\n  try {\r\n    cardsAPI.addCard(cardsPackId, question, answer).then(() => {\r\n      dispatch(getCardsByPackId(cardsPackId, page, pageCount));\r\n    });\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nexport const updateCard = (\r\n  cardId: string,\r\n  cardsPackId: string,\r\n  answer?: string,\r\n  question?: string,\r\n  page?: number,\r\n  pageCount?: number\r\n): ThunkCardType => (dispatch) => {\r\n  try {\r\n    cardsAPI.updateCard(cardId, question, answer).then(() => {\r\n      dispatch(getCardsByPackId(cardsPackId, page, pageCount));\r\n    });\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n","import s from './cards.module.css';\r\nimport style from './../../../assets/style/Common.module.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { delCard, updateCard } from '../../../m2-bll/redusers/cards-reducer';\r\nimport { PATH } from '../../routes/Routes';\r\nimport { NavLink } from 'react-router-dom';\r\nimport React, { useState } from 'react';\r\nimport useComponentVisible from './useComponentVisible';\r\nimport CommonInput from '../../../common/c1-CommonInput/CommonInput';\r\nimport CommonButton from '../../../common/c2-CommonButton/CommonButton';\r\nimport ModalContainer from './ModalContainer';\r\nimport { useFormik } from 'formik';\r\nimport { AppRootStateType } from '../../../m2-bll/state/store';\r\n\r\n\r\ntype PropsType = {\r\n  id: string;\r\n  question?: string;\r\n  answer: string;\r\n  updated?: string;\r\n  questionImg?: string;\r\n  cardsPackId: string;\r\n  grade?: number;\r\n  userId: string | undefined;\r\n};\r\n\r\nexport const Card: React.FC<PropsType> = ({\r\n  id,\r\n  question,\r\n  answer,\r\n  grade,\r\n  updated,\r\n  questionImg,\r\n  cardsPackId,\r\n  userId,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const [isShowModal, setIsShowModal] = useState<boolean>(false);\r\n  const hideModal = () => {\r\n    setIsShowModal(false);\r\n  };\r\n  const userAuthId = useSelector<AppRootStateType, string>(\r\n    (state) => state.auth.authUserData.userId\r\n  );\r\n  const {\r\n    ref,\r\n    isComponentVisible,\r\n    setIsComponentVisible,\r\n  } = useComponentVisible(true);\r\n  const delCardClick = (e: React.SyntheticEvent<HTMLButtonElement>) => {\r\n    const cardId = e.currentTarget.dataset.id;\r\n    if (cardId) {\r\n      dispatch(delCard(cardId, cardsPackId));\r\n    }\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      question: '',\r\n      answer: '',\r\n    },\r\n\r\n    onSubmit: (values, e) => {\r\n      dispatch(updateCard(id, cardsPackId, values.question, values.answer));\r\n      values.question = '';\r\n      values.answer = '';\r\n      setIsShowModal(false);\r\n    },\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <tr key={id}>\r\n        <td className={s['table__cell']}>{question}</td>\r\n        <td className={s['table__cell']}>{answer}</td>\r\n        <td className={s['table__cell']}>{grade}</td>\r\n        <td className={s['table__cell']}>{updated}</td>\r\n        <td className={s['table__cell']}>{questionImg}</td>\r\n        <td className={s['table__cell']}>\r\n          <button data-id={id} onClick={delCardClick} disabled={userId !== userAuthId}>\r\n            Del\r\n          </button>\r\n        </td>\r\n        <td className={s['table__cell']}>\r\n          <button\r\n            onClick={() => {\r\n              setIsShowModal(true);\r\n              setIsComponentVisible(true);\r\n            }}\r\n            disabled={userId !== userAuthId}\r\n          >\r\n            Update\r\n          </button>\r\n        </td>\r\n      </tr>\r\n      <div className={s.modal} ref={ref}>\r\n        {isComponentVisible && (\r\n          <ModalContainer show={isShowModal} closeCB={hideModal}>\r\n            <div className={style.commonContainer}>\r\n              <h2 className={style.title}>Update Card</h2>\r\n              <form className={style.formBlock} onSubmit={formik.handleSubmit}>\r\n                <CommonInput\r\n                  type={'text'}\r\n                  label={'question'}\r\n                  formikFieldsProps={{ ...formik.getFieldProps('question') }}\r\n                />\r\n                <CommonInput\r\n                  type={'text'}\r\n                  label={'answer'}\r\n                  formikFieldsProps={{ ...formik.getFieldProps('answer') }}\r\n                />\r\n                <CommonButton type={'submit'} name={'Update Card'} />\r\n              </form>\r\n            </div>\r\n          </ModalContainer>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport {\r\n  addCard,\r\n  CardsType,\r\n  getCardsByPackId,\r\n  setCurrentPage,\r\n  StateCardsType,\r\n} from '../../../m2-bll/redusers/cards-reducer';\r\nimport { AppRootStateType } from '../../../m2-bll/state/store';\r\nimport { Preloader } from '../../preloader/Preloader';\r\nimport { Card } from './Card';\r\nimport s from './cards.module.css';\r\nimport style from './../../../assets/style/Common.module.css';\r\nimport ModalContainer from './ModalContainer';\r\nimport { useFormik } from 'formik';\r\nimport CommonButton from '../../../common/c2-CommonButton/CommonButton';\r\nimport CommonInput from '../../../common/c1-CommonInput/CommonInput';\r\nimport useComponentVisible from './useComponentVisible';\r\nimport { Pagination } from '../../../common/c4-Pagination/Pagination';\r\n\r\ntype FormikErrorType = {\r\n  question?: string;\r\n  answer?: string;\r\n};\r\n\r\nexport const Cards = () => {\r\n  const {\r\n    cards,\r\n    isFetching,\r\n    cardsTotalCount,\r\n    currentPage,\r\n    pageSize,\r\n    portionSize,\r\n  } = useSelector<AppRootStateType, StateCardsType>((state) => state.cards);\r\n  const [isShowModal, setIsShowModal] = useState<boolean>(false);\r\n  const dispatch = useDispatch();\r\n  const { cardsPackId } = useParams<Record<string, string>>();\r\n  useEffect(() => {\r\n    dispatch(getCardsByPackId(cardsPackId, currentPage, pageSize));\r\n  }, [dispatch, cardsPackId]);\r\n\r\n  const hideModal = () => {\r\n    setIsShowModal(false);\r\n  };\r\n  const userAuthId = useSelector<AppRootStateType, string>(\r\n    (state) => state.auth.authUserData.userId\r\n  );\r\n  const cardsPackUserId = useSelector<AppRootStateType, string>(\r\n    (state) => state.cards.userId\r\n  );\r\n\r\n  const fieldsWithCards = cards.map((card: CardsType) => {\r\n    return (\r\n      <Card\r\n        key={card._id}\r\n        id={card._id}\r\n        userId={card.user_id}\r\n        question={card.question}\r\n        answer={card.answer}\r\n        grade={card.grade}\r\n        updated={card.updated}\r\n        cardsPackId={cardsPackId}\r\n        questionImg={card.questionImg}\r\n      />\r\n    );\r\n  });\r\n\r\n  const onCurrentPage = (pageNumber: any) => {\r\n    dispatch(setCurrentPage(pageNumber));\r\n    dispatch(getCardsByPackId(cardsPackId, currentPage, pageSize));\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      question: '',\r\n      answer: '',\r\n    },\r\n    validate: (values) => {\r\n      const errors: FormikErrorType = {};\r\n\r\n      if (!values.question) {\r\n        errors.question = 'Required';\r\n      }\r\n      if (!values.answer) {\r\n        errors.answer = 'Required';\r\n      }\r\n      return errors;\r\n    },\r\n\r\n    onSubmit: (values) => {\r\n      dispatch(addCard(cardsPackId, values.question, values.answer));\r\n      values.question = '';\r\n      values.answer = '';\r\n      setIsShowModal(false);\r\n    },\r\n  });\r\n\r\n  const {\r\n    ref,\r\n    isComponentVisible,\r\n    setIsComponentVisible,\r\n  } = useComponentVisible(true);\r\n\r\n  return (\r\n    <>\r\n      <div className={s.cardsContainer}>\r\n        <div className={s.paginationContainer}>\r\n          <Pagination\r\n            totalItemsCount={cardsTotalCount}\r\n            pageSize={pageSize}\r\n            currentPage={currentPage}\r\n            onCurrentPage={onCurrentPage}\r\n            portionSize={portionSize}\r\n            isFetching={isFetching}\r\n          />\r\n        </div>\r\n        {isFetching ? (\r\n          <Preloader />\r\n        ) : (\r\n          <table className={s['table']}>\r\n            <thead>\r\n              <tr className={s['table__row']}>\r\n                <td className={s['table__cell']}>question</td>\r\n                <td className={s['table__cell']}>answer</td>\r\n                <td className={s['table__cell']}>Grade</td>\r\n                <td className={s['table__cell']}>updated</td>\r\n                <td className={s['table__cell']}>url</td>\r\n                <td className={s['table__cell']}>\r\n                  <button\r\n                    onClick={() => {\r\n                      setIsShowModal(true);\r\n                      setIsComponentVisible(true);\r\n                    }}\r\n                    disabled={cardsPackUserId !== userAuthId}\r\n                  >\r\n                    Add\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            </thead>\r\n            <tbody>{fieldsWithCards}</tbody>\r\n          </table>\r\n        )}\r\n        <div className={s.modal} ref={ref}>\r\n          {isComponentVisible && (\r\n            <ModalContainer show={isShowModal} closeCB={hideModal}>\r\n              <div className={style.commonContainer}>\r\n                <h2 className={style.title}>Add Card</h2>\r\n                <form\r\n                  className={style.formBlock}\r\n                  onSubmit={formik.handleSubmit}\r\n                >\r\n                  <CommonInput\r\n                    type={'text'}\r\n                    label={'question'}\r\n                    formikFieldsProps={{ ...formik.getFieldProps('question') }}\r\n                  />\r\n\r\n                  {formik.touched.question && formik.errors.question ? (\r\n                    <div className={style.registrationError}>\r\n                      {formik.errors.question}\r\n                    </div>\r\n                  ) : null}\r\n                  <CommonInput\r\n                    type={'text'}\r\n                    label={'answer'}\r\n                    formikFieldsProps={{ ...formik.getFieldProps('answer') }}\r\n                  />\r\n                  {formik.touched.answer && formik.errors.answer ? (\r\n                    <div className={style.registrationError}>\r\n                      {formik.errors.answer}\r\n                    </div>\r\n                  ) : null}\r\n                  <CommonButton type={'submit'} name={'Add card'} />\r\n                </form>\r\n              </div>\r\n            </ModalContainer>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {CardsType, getCardsByPackId} from \"../../../m2-bll/redusers/cards-reducer\";\r\nimport {AppRootStateType} from \"../../../m2-bll/state/store\";\r\n\r\nconst grades = ['не знал', 'забыл', 'долго думал', 'перепутал', 'знал'];\r\n\r\nconst getCard = (cards: CardsType[]) => {\r\n    const sum = cards.reduce((acc, card) => acc + (6 - card.grade) * (6 - card.grade), 0);\r\n    const rand = Math.random() * sum;\r\n    const res = cards.reduce((acc: { sum: number, id: number }, card, i) => {\r\n            const newSum = acc.sum + (6 - card.grade) * (6 - card.grade);\r\n            return {sum: newSum, id: newSum < rand ? i : acc.id}\r\n        }\r\n        , {sum: 0, id: -1});\r\n    console.log('test: ', sum, rand, res)\r\n\r\n    return cards[res.id + 1];\r\n}\r\n\r\nexport const Learn = () => {\r\n    const [isChecked, setIsChecked] = useState<boolean>(false);\r\n    const [first, setFirst] = useState<boolean>(true);\r\n    // const [first, setFirst] = useState<boolean>(0);\r\n    const cards = useSelector<AppRootStateType, Array<CardsType>>(state => state.cards.cards);\r\n    const {cardsPackId} = useParams<{ cardsPackId: string }>()\r\n    const [card, setCard] = useState<CardsType>();\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        console.log('LearnContainer useEffect');\r\n\r\n        if (first) {\r\n            debugger\r\n            dispatch(getCardsByPackId(cardsPackId));\r\n            setFirst(false);\r\n        }\r\n\r\n        console.log('cards', cards)\r\n        if (cards.length > 0) setCard(getCard(cards));\r\n\r\n        return () => {\r\n            console.log('LearnContainer useEffect off');\r\n        }\r\n    }, [dispatch, cardsPackId, cards, first]);\r\n\r\n    const onNext = () => {\r\n        setIsChecked(false);\r\n\r\n        if (cards.length > 0) {\r\n            // dispatch\r\n            setCard(getCard(cards));\r\n        } else {\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            LearnPage\r\n\r\n            <div>{card && card.question}</div>\r\n            <div>\r\n                <button onClick={() => setIsChecked(true)}>check</button>\r\n            </div>\r\n\r\n            {isChecked && (\r\n                <>\r\n                    <div>{card && card.answer}</div>\r\n\r\n                    {grades.map((g, i) => (\r\n                        <button key={'grade-' + i} onClick={() => {\r\n                        }}>{g}</button>\r\n                    ))}\r\n\r\n                    <div>\r\n                        <button onClick={onNext}>next</button>\r\n                    </div>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};","import React from \"react\";\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport {Profile} from \"../pages/profile/Profile\";\r\nimport {Login} from \"../pages/login/Login\";\r\nimport {NewPassword} from \"../pages/new-password/NewPassword\";\r\nimport {Registration} from \"../pages/registration/Registration\";\r\nimport {RestorePassword} from \"../pages/restore-password/RestorePassword\";\r\nimport {Test} from \"../pages/test/Test\";\r\nimport {Error404} from \"../pages/error404/Error404\";\r\nimport style from \"../../assets/style/Common.module.css\"\r\nimport {Packs} from \"../pages/packs/Packs\";\r\nimport {Cards} from '../pages/cards/Cards';\r\nimport {Learn} from \"../pages/learn/Learn\";\r\n\r\nexport const PATH = {\r\n    LOGIN: \"/login\",\r\n    NEW_PASSWORD: \"/new-password\",\r\n    PROFILE: \"/profile\",\r\n    REGISTRATION: \"/registration\",\r\n    RESTORE_PASSWORD: \"/restore-password\",\r\n    TEST: \"/test\",\r\n    PACKS: \"/packs\",\r\n    CARDS: \"/cards\",\r\n    LEARN: \"/learn\"\r\n}\r\n\r\nexport const Routes = () => {\r\n    return (\r\n        <div className={style.commonBlock}>\r\n            <Switch>\r\n                <Route exact path={\"/\"} render={() => <Redirect to={PATH.PROFILE}/>}/>\r\n                <Route path={PATH.PROFILE} render={() => <Profile/>}/>\r\n                <Route path={PATH.LOGIN} render={() => <Login/>}/>\r\n                <Route path={`${PATH.NEW_PASSWORD}/:resetPasswordToken`} render={() => <NewPassword/>}/>\r\n                <Route path={PATH.REGISTRATION} render={() => <Registration/>}/>\r\n                <Route path={PATH.RESTORE_PASSWORD} render={() => <RestorePassword/>}/>\r\n                <Route path={PATH.TEST} render={() => <Test/>}/>\r\n                <Route path={PATH.PACKS} render={() => <Packs/>}/>\r\n                <Route path={`${PATH.CARDS}/:cardsPackId`} render={() => <Cards/>}/>\r\n                <Route path={`${PATH.LEARN}/:cardsPackId`} render={() => <Learn/>}/>\r\n                <Route render={() => <Error404/>}/>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {PATH} from \"../routes/Routes\";\r\nimport style from \"./Navbar.module.css\";\r\n\r\nexport const Navbar = () => {\r\n    return (\r\n        <div className={style.navbarBlock}>\r\n            <NavLink to={PATH.PROFILE} activeClassName={style.active}>Profile</NavLink>\r\n            <NavLink to={PATH.REGISTRATION} activeClassName={style.active}>Registration</NavLink>\r\n            <NavLink to={PATH.RESTORE_PASSWORD} activeClassName={style.active}>Restore password</NavLink>\r\n            <NavLink to={PATH.NEW_PASSWORD} activeClassName={style.active}>New password</NavLink>\r\n            <NavLink to={PATH.LOGIN} activeClassName={style.active}>Login</NavLink>\r\n            <NavLink to={PATH.PACKS} activeClassName={style.active}>Packs</NavLink>\r\n            {/*<NavLink to={PATH.LEARN} activeClassName={style.active}>Learn</NavLink>*/}\r\n            {/*<NavLink to={PATH.CARDS} activeClassName={style.active}>Cards</NavLink>*/}\r\n            <NavLink to={PATH.TEST} activeClassName={style.active}>Test</NavLink>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport {Navbar} from './m1-ui/navbar/Navbar';\r\nimport {Routes} from './m1-ui/routes/Routes';\r\n\r\nexport const App = () => {\r\n    return (\r\n        <div className=\"App\">\r\n            <Navbar/>\r\n            <Routes/>\r\n        </div>\r\n    );\r\n};\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport {profileReducer} from \"../redusers/profile-reducer\";\r\nimport {registrationReducer} from \"../redusers/registration-reducer\";\r\nimport {authReducer} from \"../redusers/auth-reducer\";\r\nimport { restoreReducer } from '../redusers/restore-reducer';\r\nimport {cardPackReducer} from \"../redusers/pack-reducer\";\r\nimport { cardsReducer } from '../redusers/cards-reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    profile: profileReducer,\r\n    registration: registrationReducer,\r\n    auth: authReducer,\r\n    restore: restoreReducer,\r\n    packs: cardPackReducer,\r\n    cards: cardsReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>","\nexport const profileReducer = (state= {}, action: any) => {\n    switch (action.type) {\n        default:\n            return state\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport {store} from \"./m2-bll/state/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <HashRouter>\n          <Provider store={store}>\n              <App />\n          </Provider>\n      </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}